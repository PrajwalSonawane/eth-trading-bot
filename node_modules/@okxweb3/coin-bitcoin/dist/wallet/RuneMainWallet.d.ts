import { SignTxParams } from "@okxweb3/coin-base";
import { BtcWallet } from "./BtcWallet";
import * as bitcoin from "../index";
import { utxoTx } from "../index";
export declare const ErrCodeLessRunesMainAmt = 2010300;
export declare const ErrCodeOpreturnExceeds = 2010301;
export declare const ErrCodeRuneIdNotStandard = 2010302;
export declare const ErrCodeMultipleRuneId = 2010303;
export declare class RuneMainWallet extends BtcWallet {
    convert2RuneTx(paramData: any): utxoTx;
    getMockMinRuneTx(paramData: any, curRuneInfo: any): utxoTx;
    getMinRuneTx(paramData: any, curRuneInfo: any, curInput: any, curOutput: any): utxoTx;
    signTransaction(param: SignTxParams): Promise<any>;
    private getRuneMainOpReturnOutput;
    estimateFee(param: SignTxParams): Promise<any>;
    convert2RuneTxSerialMint(paramData: any, outputAmount: number): utxoTx;
    convert2RuneTxPsbt(paramData: any): utxoTx;
    buildPsbt(param: SignTxParams): Promise<any>;
}
export declare class RuneMainTestWallet extends RuneMainWallet {
    network(): bitcoin.Network;
}
